<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.doooly.dao.reachad.AdSelfProductDao">

	<resultMap id="activityMap" type="com.doooly.business.product.entity.ActivityInfo" >
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="sku_id" property="skuId" jdbcType="INTEGER" />
		<result column="group_id" property="groupId" jdbcType="INTEGER" />
		<result column="special_price" property="specialPrice" jdbcType="DECIMAL" />
		<result column="special_start_date" property="specialStartDate" jdbcType="TIMESTAMP" />
		<result column="special_end_date" property="specialEndDate" jdbcType="TIMESTAMP" />
		<result column="tag" property="tag" jdbcType="VARCHAR" />
		<result column="discount" property="discount" jdbcType="DECIMAL" />
		<result column="inventory" property="inventory" jdbcType="INTEGER" />
		<result column="number" property="number" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="TINYINT" />
		<result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
		<result column="update_user" property="updateUser" jdbcType="VARCHAR" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="type" property="type" jdbcType="TINYINT" />
		<result column="buy_number_limit" property="buyNumberLimit" jdbcType="INTEGER" />
		<result column="activity_start_date" property="activityStartDate" jdbcType="TIMESTAMP" />
		<result column="activity_end_date" property="activityEndDate" jdbcType="TIMESTAMP" />
		<result column="activity_name" property="activityName" jdbcType="VARCHAR" />
	</resultMap>
		
	<resultMap id="productMap" type="com.doooly.business.product.entity.AdSelfProduct">   
        <id column="id" property="id" jdbcType="INTEGER" />
	    <result column="name" property="name" jdbcType="VARCHAR" />
	    <result column="business_id" property="businessId" jdbcType="INTEGER" />
	    <result column="brand_id" property="brandId" jdbcType="INTEGER" />
	    <result column="is_marketable" property="isMarketable" jdbcType="BIT" />
	    <result column="state" property="state" jdbcType="INTEGER" />
	    <result column="first_category" property="firstCategory" jdbcType="INTEGER" />
	    <result column="second_category" property="secondCategory" jdbcType="INTEGER" />
	    <result column="third_category" property="thirdCategory" jdbcType="INTEGER" />
	    <result column="buy_start_date" property="buyStartDate" jdbcType="TIMESTAMP" />
	    <result column="buy_end_date" property="buyEndDate" jdbcType="TIMESTAMP" />
	    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
	    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
	    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
	    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
	    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
	    <result column="duihuan_url" property="duihuanUrl" jdbcType="VARCHAR" />
        <collection property="productSku" column="productSku" ofType="com.doooly.business.product.entity.AdSelfProductSku">
            <id column="sid" property="id" jdbcType="INTEGER" />
		    <result column="specification" property="specification" jdbcType="VARCHAR" />
		    <result column="number" property="number" jdbcType="VARCHAR" />
		    <result column="title" property="title" jdbcType="VARCHAR" />
		    <result column="state" property="state" jdbcType="INTEGER" />
		    <result column="market_price" property="marketPrice" jdbcType="DECIMAL" />
		    <result column="supply_price" property="supplyPrice" jdbcType="DECIMAL" />
		    <result column="sell_price" property="sellPrice" jdbcType="DECIMAL" />
		    <result column="freight" property="freight" jdbcType="DECIMAL" />
		    <result column="delivery_type" property="deliveryType" jdbcType="INTEGER" />
		    <result column="audit_description" property="auditDescription" jdbcType="VARCHAR" />
		    <result column="self_product_id" property="selfProductId" jdbcType="INTEGER" />
		    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
		    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />   
		    <result column="external_number" property="externalNumber" jdbcType="VARCHAR" />
			<result column="inventory" property="inventory" jdbcType="INTEGER" />
        </collection> 
     </resultMap>

	<!-- 活动库存 -->
	<update id="decStock">
		update ad_group_self_product_price_expand set inventory = inventory - 1 where sku_id =  #{skuId} and number = #{number} and inventory > 0
	</update>
	<update id="incStock">
		update ad_group_self_product_price_expand set inventory = inventory + 1 where sku_id =  #{skuId} and number = #{number}
	</update>

	<!-- 商品库存 -->
	<update id="decInventory">
		update ad_self_product_sku set inventory = inventory - 1 where id =  #{skuId} and inventory > 0
	</update>
	<update id="incInventory">
		update ad_self_product_sku set inventory = inventory + 1 where id =  #{skuId}
	</update>


	<!-- 获得活动信息 -->
	<select id="getActivityInfo" resultMap="activityMap">
		select
			id,
			sku_id,
			group_id,
      		special_price,
      		special_start_date,
      		special_end_date,
      		tag,
      		discount,
      		inventory,
      		number,
      		status,
      		update_date,
      		update_user,
      		create_date,
      		type,
      		buy_number_limit,
      		activity_start_date,
      		activity_end_date,
      		activity_name
		from
			ad_group_self_product_price p
		where
			p.special_start_date &lt;= now()
			and p.special_end_date &gt;= now()
			and p.group_id = #{groupId}
			and p.sku_id =#{skuId}
			and p.status = '1'
	</select>
	
	<!-- 下单查询商品信息 -->
    <select id="getProduct" resultMap="productMap" >  
        SELECT 
        		p.id,p.name,p.business_id,p.brand_id,p.is_marketable,p.state, p.first_category,p.second_category,p.third_category, 
    			p.buy_start_date, p.buy_end_date,p.create_date,p.create_user,p.update_date,p.update_user,p.del_flag,p.duihuan_url,
        		s.id AS sid, s.specification, s.number,s.title, s.state, s.market_price,s.supply_price, s.sell_price,
        		s.freight,s.delivery_type, s.audit_description, s.self_product_id,s.update_date, s.update_user,s.external_number,s.del_flag,s.inventory
        	FROM 
        		ad_self_product p,
        		ad_self_product_sku s 
        WHERE 
        		p.id = s.self_product_id
				and s.del_flag = '0'
        		<if test="merchantId != null and merchantId != ''" >
        			and p.business_id = #{merchantId}
        		</if>
        		<if test="productId != null and productId != ''" >
        			and p.id = #{productId}
        		</if>
        		<if test="skuId != null and skuId != ''" >
        			and s.id = #{skuId}
        		</if>
    </select>

	<select id="getSelfProductTotalNum" resultType="java.lang.Integer">
		SELECT COUNT(b.id) FROM(
			SELECT 
				p.id,
				(SELECT COUNT(sku.id) FROM ad_self_product_sku sku WHERE sku.self_product_id = p.id 
					AND sku.del_flag=0 
					AND ((sku.state=4 AND NOW() BETWEEN p.buy_start_date AND p.buy_end_date) OR (sku.state=6 AND NOW() &lt;= p.buy_end_date))
				) AS "totalSkuCount",
				(SELECT COUNT(s.id) FROM ad_group_self_product_range r INNER JOIN ad_self_product_sku s ON r.sku_id = s.id 
					WHERE s.self_product_id = p.id AND r.status = 1 AND r.group_id = #{groupId} AND s.del_flag=0 
					AND ((s.state=4 AND NOW() BETWEEN p.buy_start_date AND p.buy_end_date) OR (s.state=6 AND NOW() &lt;= p.buy_end_date))
				)AS "limitSkuCount"
			FROM ad_self_product p
			LEFT JOIN ad_self_product_image i
				ON p.id = i.self_product_id
			WHERE p.is_marketable != 0 AND p.del_flag = 0
		)b WHERE b.totalSkuCount > b.limitSkuCount
    </select>

    <select id="getSelfProductList" resultType="com.doooly.business.product.entity.AdSelfProduct">
        SELECT b.id,b.name,b.introduction,b.image,b.limitSkuListStr FROM(
			SELECT 
				p.id AS "id",
				p.name AS "name",
				IFNULL(p.introduction,'') AS "introduction",
				i.image AS "image",
				(SELECT COUNT(sku.id) FROM ad_self_product_sku sku WHERE sku.self_product_id = p.id 
					AND sku.del_flag=0 
					AND ((sku.state=4 AND NOW() BETWEEN p.buy_start_date AND p.buy_end_date) OR (sku.state=6 AND NOW() &lt;= p.buy_end_date))
				) AS "totalSkuCount",
				(SELECT COUNT(s.id) FROM ad_group_self_product_range r INNER JOIN ad_self_product_sku s ON r.sku_id = s.id 
					WHERE s.self_product_id = p.id AND r.status = 1 AND r.group_id = #{groupId} 
					AND s.del_flag=0 
					AND ((s.state=4 AND NOW() BETWEEN p.buy_start_date AND p.buy_end_date) OR (s.state=6 AND NOW() &lt;= p.buy_end_date))
				)AS "limitSkuCount",
				(SELECT GROUP_CONCAT(s.id) FROM ad_group_self_product_range r INNER JOIN ad_self_product_sku s ON r.sku_id = s.id 
					WHERE s.self_product_id = p.id AND r.status = 1 AND r.group_id = #{groupId} 
					AND s.del_flag=0 
					AND ((s.state=4 AND NOW() BETWEEN p.buy_start_date AND p.buy_end_date) OR (s.state=6 AND NOW() &lt;= p.buy_end_date)) GROUP BY p.id
				)AS "limitSkuListStr"
			FROM ad_self_product p
			LEFT JOIN ad_self_product_image i
				ON p.id = i.self_product_id
			WHERE p.is_marketable != 0 AND p.del_flag = 0
			ORDER BY p.sort ASC,p.create_date DESC
		)b WHERE b.totalSkuCount > b.limitSkuCount
		LIMIT #{startIndex},#{pageSize}
    </select>
    
    <select id="getLowestSellingPriceSku" resultType="com.doooly.business.product.entity.AdSelfProductSku">
        SELECT 
        	s.id AS "id",
        	s.sell_price AS "sellPrice",
        	s.market_price AS "marketPrice" 
        FROM ad_self_product_sku s
        INNER JOIN ad_self_product p
        ON s.self_product_id=p.id
		WHERE ((s.state=4 AND NOW() BETWEEN p.buy_start_date AND p.buy_end_date) OR (s.state=6 AND NOW() &lt;= p.buy_end_date))
			AND s.self_product_id=#{productId} AND s.del_flag=0
			<if test="limitSkuArray != null" >
        		AND s.id NOT IN
        		<foreach item="item" index="index" collection="limitSkuArray" 
        			open="(" separator="," close=")">  
                   #{item}  
               </foreach> 
        	</if>
		ORDER BY s.sell_price ASC 
		LIMIT 1
    </select>
    
    <select id="getLowestSpecialPriceAndDiscount" resultType="com.doooly.business.product.entity.AdSelfProduct">
		SELECT
			c.id,
			IFNULL(a.tag,'') AS "tagName",
			MIN(a.special_price) AS "specialPrice",
			MIN(a.discount) AS "discount",
			SUM(e.inventory) AS "inventory",
			a.activity_start_date AS "activityStartDate",
			a.activity_end_date AS "activityEndDate" 
		FROM
			ad_group_self_product_price a
		INNER JOIN ad_self_product_sku b ON a.sku_id = b.id
		INNER JOIN ad_self_product c ON b.self_product_id = c.id
		LEFT JOIN ad_group_self_product_price_expand e ON a.sku_id = e.sku_id AND a.number = e.number
		WHERE c.id = #{productId}
			AND a.group_id = #{groupId}
			AND a.type = 0
			AND a.status = 1
			AND NOW() BETWEEN a.special_start_date AND a.special_end_date
			AND b.del_flag = 0 
			AND ((b.state=4 AND NOW() BETWEEN c.buy_start_date AND c.buy_end_date) OR (b.state=6 AND NOW() &lt;= c.buy_end_date))
			<if test="limitSkuArray != null" >
       			AND b.id NOT IN 
       			<foreach item="item" index="index" collection="limitSkuArray"   
                    open="(" separator="," close=")">  
                   #{item}  
               </foreach>
       		</if>
		GROUP BY c.id
    </select>
    
    <select id="getSelfProductDetailById" resultType="com.doooly.business.product.entity.AdSelfProduct">
        SELECT 
			p.id AS "id",
			p.name AS "name",
			p.detail AS "detail",
			b.id AS "businessId",
			b.company AS "company",  
			r.description AS "brandDescription"
		FROM ad_self_product p
		LEFT JOIN ad_business b
			ON p.business_id = b.id
		LEFT JOIN ad_brand r
			ON p.brand_id = r.id
		WHERE p.id = #{productId}
    </select>

	<!--没有活动库存,显示常规库存; 活动库存大于常规库,显示常规库存;活动库存小于常规库存,显示活动库存 -->
    <select id="getSelfProductSkuList" resultType="com.doooly.business.product.entity.AdSelfProductSku">
        SELECT 
        	s.id AS "id",
        	s.sell_price AS "sellPrice",
        	s.market_price AS "marketPrice",
        	s.specification AS "specification",
        	s.number AS "number",
			case
			when p.inventory is null then s.inventory
			when p.inventory &gt; s.inventory then s.inventory
			when p.inventory &lt; s.inventory then p.inventory
			else s.inventory end AS "inventory",
        	p.buy_number_limit AS "buyNumberLimit",
        	p.special_price AS "specialPrice" 
        FROM ad_self_product_sku s
        LEFT JOIN (SELECT a.sku_id,e.inventory,a.buy_number_limit,a.special_price FROM ad_group_self_product_price a 
        		LEFT JOIN ad_group_self_product_price_expand e ON a.sku_id = e.sku_id AND a.number = e.number
        		WHERE a.group_id = #{groupId} AND a.type = 0 AND a.status = 1 AND NOW() BETWEEN a.special_start_date AND a.special_end_date) p
			ON s.id = p.sku_id 
		INNER JOIN ad_self_product p
        	ON s.self_product_id = p.id
		WHERE ((s.state=4 AND NOW() BETWEEN p.buy_start_date AND p.buy_end_date) OR (s.state=6 AND NOW() &lt;= p.buy_end_date))
			AND s.self_product_id=#{productId} AND s.del_flag = 0
			<if test="limitSkuIdList != null and limitSkuIdList.size()>0" >
       			AND s.id NOT IN 
       			<foreach item="item" index="index" collection="limitSkuIdList"   
                    open="(" separator="," close=")">  
                   #{item}  
               </foreach>
       		</if>
		ORDER BY s.sell_price ASC 
    </select>
    
    <select id="getSelfProductTypeList" resultType="com.doooly.business.product.entity.AdSelfProductType">
        SELECT t.id,t.name 
		FROM ad_self_product_type t
		INNER JOIN ad_self_product_type_conn conn
			ON conn.self_product_type_id = t.id
		INNER JOIN ad_self_product p
			ON conn.self_product_id = p.id
		WHERE p.id = #{productId} 
    </select>
    
    <select id="getLimitSkuIdListByProductId" resultType="java.lang.String">
        SELECT s.id
		FROM ad_self_product_sku s
		INNER JOIN ad_group_self_product_range r
			ON s.id = r.sku_id
		INNER JOIN ad_self_product p
        	ON s.self_product_id = p.id
		WHERE ((s.state=4 AND NOW() BETWEEN p.buy_start_date AND p.buy_end_date) OR (s.state=6 AND NOW() &lt;= p.buy_end_date))
			AND s.self_product_id = #{productId} 
			AND r.status = 1
			AND r.group_id = #{groupId} 
			AND s.del_flag = 0
    </select>
    
    <select id="getSelfProductSkuListByName" resultType="com.doooly.business.product.entity.AdGroupSelfProductPrice">
        SELECT
			a.id AS "id",
			a.sku_id AS "skuId",
			a.group_id AS "groupId",
			a.special_price AS "specialPrice",
			a.special_start_date AS "specialStartDate",
			a.special_end_date AS "specialEndDate",
			a.tag AS "tag",
			a.discount AS "discount",
			c.inventory AS "inventory",
			a.number AS "number",
			a.status AS "status",
			a.type AS "type",
			a.buy_number_limit AS "buyNumberLimit",
			b.specification AS "specification",
			b.number AS "productNumber",
			b.title AS "title",
			b.market_price AS "marketPrice",
			b.supply_price AS "supplyPrice",
			b.inventory AS "skuInventory",
			b.sell_price AS "sellPrice",
			a.activity_start_date as "activityStartDate",
			a.activity_end_date as "activityEndDate",
			b.self_product_id as "produceId",
			e.business_id as "businessId" ,
			a.week_list as "weekList",
			a.activity_of_time as "activityOfTime"
		FROM ad_group_self_product_price a
		INNER JOIN ad_self_product_sku b ON a.sku_id = b.id AND b.del_flag =0
		LEFT JOIN ad_group_self_product_price_expand c ON a.sku_id = c.sku_id AND a.number = c.number
		inner join ad_self_product e on e.id = b.self_product_id
		WHERE
			a.activity_name = #{activityName}
			and a.group_id = #{groupId}
			and b.state != 7
			and a.status = 1
        GROUP BY a.sku_id
		ORDER BY a.create_date DESC
		LIMIT 1
    </select>


	<select id="getSelfProductAirport" resultType="com.doooly.business.product.entity.AdGroupSelfProductPrice">
		SELECT
		a.id AS "id",
		a.sku_id AS "skuId",
		a.group_id AS "groupId",
		a.special_price AS "specialPrice",
		a.special_start_date AS "specialStartDate",
		a.special_end_date AS "specialEndDate",
		a.tag AS "tag",
		a.discount AS "discount",
		c.inventory AS "inventory",
		a.inventory_init as "inventoryInit",
		a.number AS "number",
		a.status AS "status",
		a.type AS "type",
		a.buy_number_limit AS "buyNumberLimit",
		b.specification AS "specification",
		b.number AS "productNumber",
		b.title AS "title",
		b.market_price AS "marketPrice",
		b.supply_price AS "supplyPrice",
		b.inventory AS "skuInventory",
		b.sell_price AS "sellPrice",
		a.activity_start_date as "activityStartDate",
		a.activity_end_date as "activityEndDate",
		b.self_product_id as "produceId",
		e.business_id as "businessId" ,
		a.week_list as "weekList",
		d.image as "image",
		e.detail as "detail",
		e.introduction as "introduction",
		a.activity_of_time as "activityOfTime"
		FROM ad_group_self_product_price a
		INNER JOIN ad_self_product_sku b ON a.sku_id = b.id AND b.del_flag =0
		LEFT JOIN ad_group_self_product_price_expand c ON a.sku_id = c.sku_id AND a.number = c.number
		LEFT JOIN ad_self_product_image d ON d.self_product_id = b.self_product_id
		inner join ad_self_product e on e.id = b.self_product_id
		<where>
			<if test="activityName != null and activityName != ''">
				and a.activity_name = #{activityName} and b.state != 7 and a.status = 1
			</if>
		</where>
	</select>



</mapper>